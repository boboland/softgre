                                Futuro do SoftGREd

* Salvar o pid em /var/run/softgred.pid, corrigir /etc/init.d/softgred para tal.

* Adicionar suporte a configuracao via /etc/softgred.conf, utilizar a libconfig-dev ou glib

* Adicionar parametro para limitar o numero de interfaces.

* Alterar para utilizar o esquema de hash da glib.

* Ajustar o nome do processo, escrevendo em argv[0]

* thread responsavel por salvar o contexto das interfaces (RX/TX), e desativar todas as interfaces
  que estiverem a X tempo sem uso.

* Adicionar opcao --force, capaz de criar todas as bridges de "destino no attach" quando as mesmas nao existir.

* Por padrao remover todas as interfaces que existirem, caso contrario usar --no-reset para nao fazer isto.

* Melhorar as mensagens de erro e utilizacoes da flag debug_mode

* Criar um utilitario via linha de comando, capaz de interagir com o softgred. (necessario /tmp/softgred.sock)

* reescrever componente bridge removendo uso do system()

* Criar pagina na wiki do github, com explicacao dos cenarios de uso. documentar no geral.

* Interface web escrita em PHP, capaz de listar/remover/exibir-status de todas as interfaces GRE.

* Criar um arquivo de man (man softgred)

* Relacionado a API em contrib/www, adicionar esquema para se auto instalar no apache em /etc/apache2/

* (FEITO) Ajustar o Makefile/configure.ac para uma melhor verificacao das dependencias.

* (FEITO) Criar um socket file em /tmp/softgred.sock, como sendo interface para acessar todos os dados
  das interfaces tanto via web quanto a um futuro utilitario cli. ex: softgrecli

* (FEITO) Alterar o esquema de salvamento das interfaces para utilizar uma hashtable, assim teremos
  mais performance e flexibilidade durante acesso dos dados. (utilizar a libdhash)
* (FEITO) escrever pacote debian

* (FEITO) criar script inicializacao

* (FEITO) validar os parametros de bridge (tamanho do nome da interface) e vlan (apenas entre 1 e 4096)

* (FEITO) Adicionar capacidade de bloquear todo trafego em L2, e liberando apenas atraves de regras no netfilter relacionando o cliente x broadcast. (utilizar a API do ebtables)

* (FEITO) Adicionar exibicao da hora nos prints de debug. corrigir os leveis de exibição dos logs (-d, -dd e -ddd)

* (FEITO) Sistema de deteccao de problemas e depuracao utilizando backtrace()

